{"version":3,"file":"scrypt.js","sourceRoot":"","sources":["../src/Const.ts","../src/Util.ts","../src/ModAsmJs.ts","../src/ModFlash.ts","../src/Scrypt.ts"],"names":[],"mappings":"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","sourcesContent":["/** defined by uglifyjs */\ndeclare const _RELEASE;\n\n/** @const */\nconst _DEBUG = (typeof _RELEASE == 'undefined');\n\ntype Bytes = Uint8Array | number[];\n","\nmodule Util {\n    const _Uint8Array: Uint8ArrayConstructor = window['Uint8Array'];\n\n    function allocBuf(size: number) : Bytes {\n        return _Uint8Array? new _Uint8Array(size) : new Array(size);\n    }\n\n    function createBuf(buf: number[]) : Bytes {\n        return _Uint8Array? new _Uint8Array(buf) : buf;\n    }\n\n\n    export function hexToBytes(inStr: string) : Bytes {\n        let outLen = inStr.length >> 1;\n        let outBuf = allocBuf(outLen);\n\n        for (let i = 0; i < outLen; i++) {\n            let byte = parseInt(inStr.substr(i * 2, 2), 16);\n            if (isNaN(byte)) {\n                throw Error('invalid hex data');\n            }\n            outBuf[i] = byte;\n        }\n        return outBuf;\n    }\n\n    export function bytesToHex(inBuf: Bytes) : string {\n        let inLen = inBuf.length;\n        let outStr = '';\n\n        for (let i = 0; i < inLen; i++) {\n            let byte = inBuf[i] & 0xff;\n            let hex = byte.toString(16);\n            if (byte < 16) {\n                hex = '0' + hex;\n            }\n            outStr += hex;\n        }\n        return outStr;\n    }\n\n\n    export function strToBytes(inStr: string) : Bytes {\n        let _TextEncoder = window['TextEncoder'];\n        if (_TextEncoder) {\n            return new _TextEncoder().encode(inStr);\n        }\n\n        let outBuf = [],\n            i = 0,\n            j = 0,\n            s = encodeURI(inStr),\n            n = s.length;\n        \n        while (i < n) {\n            let ch = s.charCodeAt(i);\n            if (ch == 37) {     // '%'\n                let hex = s.substr(i + 1, 2);\n                ch = parseInt(hex, 16);\n                i += 3;\n            }\n            else {\n                i++;\n            }\n            outBuf[j++] = ch;\n        }\n        return createBuf(outBuf);\n    }\n\n    export function bytesToStr(inBuf: Bytes) : string {\n        let inLen = inBuf.length;\n        let outStr = '';\n\n        for (let i = 0; i < inLen; i++) {\n            let byte = inBuf[i];\n            let hex = byte.toString(16);\n            if (byte < 16) {\n                hex = '0' + hex;\n            }\n            outStr += ('%' + hex);\n        }\n        \n        return decodeURIComponent(outStr);\n    }\n\n    export function hideDom(el: HTMLElement) {\n        el.style.cssText = 'position:absolute;top:-999px';\n    }\n}","///<reference path=\"Const.ts\"/>\n///<reference path=\"Util.ts\"/>\n\n\nmodule ModAsmJs {\n    let mAsmMod;\n\n    \n    export function check() {\n        return 'Worker' in window;\n    }\n    \n    export function load(path: string) {\n        Scrypt['__asmjs_cb'] = callbackHandler;\n\n        let url = path + 'asmjs.js';\n        if (_DEBUG) {\n            url = '/src/mod_asmjs/debug/asmjs.js';\n        }\n        \n        let spt = document.createElement('script');\n\n        spt.onerror = function() {\n            (ModAsmJs as IMod).onerror('script load fail');\n        };\n        spt.src = url;\n        document.body.appendChild(spt);\n    }\n\n    export function hash(pass: Bytes, salt: Bytes, dkLen: number) {\n        mAsmMod.hash(pass, salt, dkLen);\n    }\n    \n    export function config(\n        N: number, r: number, P: number,\n        thread: number,\n        maxPassLen: number, maxSaltLen: number, maxDkLen: number\n    ) {\n        mAsmMod['config'].apply(this, arguments);\n    }\n    \n    export function stop() {\n        mAsmMod.stop();\n    }\n\n    export function free() {\n        mAsmMod.free();\n    }\n\n    export function unload() {\n        if (mAsmMod) {\n            mAsmMod.unload();\n            mAsmMod = null;\n        }\n    }\n\n    function callbackHandler(msg, data?) {\n        if (msg == 'onload') {\n            mAsmMod = data;\n        }\n        ModAsmJs[msg](data);\n    }\n}","///<reference path=\"Const.ts\"/>\n///<reference path=\"Util.ts\"/>\n\nmodule ModFlash {\n    let mSwf: HTMLElement;\n    let mActiveX: boolean;\n\n\n    export function check() {\n        return getVer() >= 18;\n    }\n    \n    export function load(path: string) {\n        Scrypt['__flash_cb'] = callbackHandler;\n\n        let url = path + 'flash.swf';\n        if (_DEBUG) {\n            url = '/src/mod_flash/bin-debug/Scrypt.swf';\n        }\n        \n        mSwf = createSwf(url);\n        Util.hideDom(mSwf);\n    }\n    \n    export function hash(pass: Bytes, salt: Bytes, dkLen: number) {\n        let passHex = Util.bytesToHex(pass);\n        let saltHex = Util.bytesToHex(salt);\n        \n        mSwf['hash'](passHex, saltHex, dkLen);\n    }\n    \n    export function config(\n        N: number, r: number, P: number,\n        thread: number,\n        maxPassLen: number, maxSaltLen: number, maxDkLen: number\n    ) {\n        mSwf['config'].apply(mSwf, arguments);\n    }\n    \n    export function stop() {\n        mSwf['cancel']();\n    }\n\n    export function free() {\n        mSwf['free']();\n        mSwf = null;\n    }\n\n    export function unload() {\n        document.body.removeChild(mSwf);\n        mSwf = null;\n    }\n\n    \n    function callbackHandler(msg, data?) {\n        if (msg == 'oncomplete') {\n            data = Util.hexToBytes(data);\n        }\n        try {\n            ModFlash[msg](data);\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    function createSwf(url: string) : HTMLElement {\n        let box = document.createElement('div');\n        let id = '_' + (Math.random() * 1e6 | 0);\n\n        url = encodeURI(url);\n\n        box.innerHTML = mActiveX\n            ? `<object id=${id} classid=clsid:D27CDB6E-AE6D-11cf-96B8-444553540000><param name=movie value=${url}><param name=allowScriptAccess value=always></object>`\n            : `<embed id=${id} name=${id} src=${url} type=application/x-shockwave-flash allowScriptAccess=always></embed>`\n        \n        let swf = box.firstChild as HTMLElement;\n        document.body.appendChild(swf);\n        return swf;\n    }\n\n    function toNum(s) {\n        return +s.match(/\\d+\\.\\d+/);\n    }\n\n\n    const R_VER = /\\d+\\.\\d+/;\n\n    function getPluginVer() {\n        let plugins = navigator.plugins;\n        if (!plugins) {\n            return;\n        }\n        let item = plugins['Shockwave Flash'];\n        if (!item) {\n            return;\n        }\n        let desc = item.description;\n        if (!desc) {\n            return;\n        }\n        return +desc.match(R_VER);\n    }\n\n    function getActiveXVer() {\n        let ACTIVEX = window['ActiveXObject'];\n        if (!ACTIVEX) {\n            return;\n        }\n        let ver = '';\n        try {\n            ver = new ACTIVEX('ShockwaveFlash.ShockwaveFlash')\n                .GetVariable('$version')\n                .replace(',', '.');\n        } catch (err) {\n            return;\n        }\n        return +ver.match(/\\d+\\.\\d+/);\n    }\n\n    function getVer() : number {\n        let v = getPluginVer();\n        if (v > 0) {\n            return v;\n        }\n        \n        v = getActiveXVer();\n        if (v > 0) {\n            mActiveX = true;\n            return v;\n        }\n\n        return 0;\n    }\n}","///<reference path=\"Const.ts\"/>\n///<reference path=\"Util.ts\"/>\n///<reference path=\"IMod.d.ts\"/>\n///<reference path=\"ModAsmJs.ts\"/>\n///<reference path=\"ModFlash.ts\"/>\n\n\nmodule Scrypt {\n\n    const MOD_MAP : { [k:string] : IMod} = {\n        'asmjs': ModAsmJs,\n        'flash': ModFlash,\n    };\n\n    const enum CONST {\n        MAX_MEM = 1 << 30,          // 1G\n        MAX_N = MAX_MEM / 128,\n        LOAD_TIMEOUT = 30 * 1000,   // 30s\n    };\n\n\n    const enum STATE {\n        NONE,\n        LOADING,\n        LOADED,\n        CONFIGING,\n        READY,\n        RUNNING,\n    };\n\n    let mState = STATE.NONE,\n        mMod: IMod,\n        mAvailableAPI: string[],\n        mResPath = '',\n        mLoaderTimer = 0,\n        mTimeout = CONST.LOAD_TIMEOUT;\n\n\n    let mMaxPassLen = 64,\n        mMaxSaltLen = 64,\n        mMaxDkLen = 64,\n        mMaxThread = 1;\n\n\n    export let onload: () => void;\n    export let onerror: (err: string) => void;\n    export let onready: () => void;\n    export let onprogress: (percent: number) => void;\n    export let oncomplete: (dkHex: string) => void;\n\n\n    function chooseBestMod() {\n        let list = getAvailableMod();\n        let set = {};\n\n        for (let i = 0; i < list.length; i++) {\n            set[ list[i] ] = true;\n        }\n\n        // TODO\n        let ua = navigator.userAgent;\n        if (/Chrome|Firefox|Edge|Safari/.test(ua)) {\n            if ('asmjs' in set) {\n                return 'asmjs';\n            }\n        }\n        if ('flash' in set) {\n            return 'flash';\n        }\n        return null;\n    }\n\n    function raise(fn: Function, arg1?) {\n        if (!fn) {\n            return;\n        }\n        switch (arguments.length) {\n            case 1: return fn();\n            case 2: return fn(arg1);\n            // ...\n        }\n    }\n\n    function clearTimer() {\n        if (mLoaderTimer) {\n            clearTimeout(mLoaderTimer);\n            mLoaderTimer = 0;\n        }\n    }\n\n    // function test() {\n    //     const pass = strToBin('pleaseletmein');\n    //     const salt = strToBin('SodiumChloride');\n    //     const expected = [\n    //         0x25, 0xa9, 0xfa, 0x20, 0x7f, 0x87, 0xca, 0x09,\n    //         0xa4, 0xef, 0x8b, 0x9f, 0x77, 0x7a, 0xca, 0x16,\n    //         0xbe, 0xb7, 0x84, 0xae, 0x18, 0x30, 0xbf, 0xbf,\n    //         0xd3, 0x83, 0x25, 0xaa, 0xbb, 0x93, 0x77, 0xdf,\n    //         0x1b, 0xa7, 0x84, 0xd7, 0x46, 0xea, 0x27, 0x3b,\n    //         0xf5, 0x16, 0xa4, 0x6f, 0xbf, 0xac, 0xf5, 0x11,\n    //         0xc5, 0xbe, 0xba, 0x4c, 0x4a, 0xb3, 0xac, 0xc7,\n    //         0xfa, 0x6f, 0x46, 0x0b, 0x6c, 0x0f, 0x47, 0x7b,\n    //     ];\n    //     hash(pass, salt);\n    // }\n\n    export function hash(pass: Bytes, salt: Bytes, dkLen: number) {\n        // check state\n        if (mState < STATE.LOADED) {\n            throw Error('scrypt not loaded');\n        }\n        if (mState < STATE.READY) {\n            throw Error('scrypt not configed');\n        }\n        if (mState == STATE.RUNNING) {\n            throw Error('scrypt is running');\n        }\n        mState = STATE.RUNNING;\n\n        // length check\n        if (pass.length > mMaxPassLen) {\n            throw Error('pass.length > maxPassLen');\n        }\n        if (salt.length > mMaxSaltLen) {\n            throw Error('salt.length > maxSaltLen');\n        }\n        if (dkLen > mMaxDkLen) {\n            throw Error('dkLen > maxDkLen');\n        }\n\n        mMod.hash(pass, salt, dkLen);\n    }\n    \n    export function getAvailableMod() {\n        if (!mAvailableAPI) {\n            mAvailableAPI = [];\n            \n            for (let k in MOD_MAP) {\n                if (MOD_MAP[k].check()) {\n                    mAvailableAPI.push(k);\n                }\n            }\n        }\n        return mAvailableAPI;\n    }\n    \n    export function load(mod?: string) {\n        if (mState >= STATE.LOADING) {\n            return;\n        }\n        if (!mod) {\n            mod = chooseBestMod();\n            if (!mod) {\n                throw Error('no available mod');\n            }\n        }\n        mMod = MOD_MAP[mod];\n        if (!mMod) {\n            throw Error('unsupported mod: ' + mod);\n        }\n\n        mMod.onload = function() {\n            clearTimer();\n            raise(onload);\n        };\n\n        mMod.onerror = function(err) {\n            unload();\n            raise(onerror, err);\n        };\n\n        mMod.onready = function() {\n            mState = STATE.READY;\n            raise(onready);\n        };\n\n        mMod.onprogress = function(percent) {\n            raise(onprogress, percent);\n        };\n\n        mMod.oncomplete = function(dk) {\n            mState = STATE.READY;\n            raise(onprogress, 1);\n            raise(oncomplete, dk);\n        };\n\n        // 加载计时\n        clearTimer();\n\n        mLoaderTimer = setTimeout(function() {\n            unload();\n            raise(onerror, 'load timeout');\n        }, mTimeout);\n\n        mState = STATE.LOADING;\n        mMod.load(mResPath);\n    }\n    \n    export function stop() {\n        mMod.stop();\n        mState = STATE.READY;\n    }\n    \n    export function free() {\n        if (mState == STATE.READY) {\n            mMod.free();\n            mState = STATE.LOADED;\n        }\n    }\n\n    export function unload() {\n        if (mState != STATE.NONE) {\n            mMod.unload();\n            mState = STATE.NONE;\n        }\n        clearTimer();\n    }\n    \n    export function config(param, opt?, test?: boolean) {\n        if (!param) {\n            throw Error('config() takes at least 1 argument');\n        }\n\n        let N = param['N'];\n        if (! (1 < N && N <= CONST.MAX_N)) {\n            throw Error(`param N out of range (1 < N <= 2^23)`);\n        }\n        if (N & (N - 1)) {\n            throw Error('param N must be power of 2');\n        }\n        N |= 0;\n\n        let r = param['r'];\n        if (! (0 < r && r < 256)) {\n            throw Error('param r out of range (0 < r < 256)');\n        }\n        r |= 0;\n\n        let P = param['P'];\n        if (! (0 < P && P < 256)) {\n            throw Error('param P out of range (0 < P < 256)');\n        }\n        P |= 0;\n\n        let memCost = N * r * 128;\n        if (memCost > CONST.MAX_MEM) {\n            throw Error('memory limit exceeded (N * r * 128 > 1G)')\n        }\n\n        // option param\n        if (opt) {\n            let maxPassLen = opt['maxPassLen'];\n            if (maxPassLen == null) {\n                maxPassLen = mMaxPassLen;\n            } else if (maxPassLen <= 0) {\n                throw Error('invalid maxPassLen');\n            }\n\n            let maxSaltLen = opt['maxSaltLen'];\n            if (maxSaltLen == null) {\n                maxSaltLen = mMaxSaltLen;\n            } else if (maxSaltLen <= 0) {\n                throw Error('invalid maxSaltLen');\n            }\n\n            let maxDkLen = opt['maxDkLen'];\n            if (maxDkLen == null) {\n                maxDkLen = mMaxDkLen;\n            } else if (maxDkLen <= 0) {\n                throw Error('invalid maxDkLen');\n            }\n\n            let maxThread = opt['maxThread'];\n            if (maxThread == null) {\n                maxThread = mMaxThread;\n            } else if (maxThread <= 0) {\n                throw Error('invalid maxThread');\n            }\n\n            if (!test) {\n                mMaxPassLen = maxPassLen;\n                mMaxSaltLen = maxSaltLen;\n                mMaxDkLen = maxDkLen;\n                mMaxThread = maxThread;\n            }\n        }\n\n        // test param\n        if (test) {\n            return;\n        }\n\n        let taskPerThread = Math.ceil(P / mMaxThread);\n        let threadCount = Math.ceil(P / taskPerThread);\n\n        mMod.config(N, r, P, threadCount, mMaxPassLen, mMaxSaltLen, mMaxDkLen);\n\n        mState = STATE.CONFIGING;\n    }\n    \n    export function strToBin(str: string) : Bytes {\n        return Util.strToBytes(str);\n    }\n    \n    export function binToStr(bin: Bytes) : string {\n        return Util.bytesToStr(bin);\n    }\n\n    export function hexToBin(hex: string) : Bytes {\n        if (hex.length & 1) {\n            throw Error('invalid hex length');\n        }\n        return Util.hexToBytes(hex);\n    }\n\n    export function binToHex(bin: Bytes) : string {\n        return Util.bytesToHex(bin);\n    }\n\n    export function setResPath(path: string) {\n        if (! /\\/$/.test(path)) {\n            path += '/';\n        }\n        mResPath = path;\n    }\n\n    export function setResTimeout(ms: number) {\n        mTimeout = ms;\n    }\n    \n    window['scrypt'] = Scrypt;\n}"]}